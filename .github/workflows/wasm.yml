name: Build and package for Web

on:
  push:
    branches: [ "main", "wasm" ]
  pull_request:
    branches: [ "main", "wasm" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.1

    - name: Cache build
      id: cache-build
      uses: actions/cache@v3
      with:
        path: |
          megasource-web
        key: cache-build

    - name: Install Tools
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: |
        sudo apt install dos2unix meson

    - name: Install emscripten
      if: steps.cache-build.outputs.cache-hit != 'true'
      uses: mymindstorm/setup-emsdk@v10
      with:
        version: 4.0.10

    - name: Setup megasource
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/rozenmad/megasource-web
        cd megasource-web
        git clone https://github.com/rozenmad/love-web libs/love
        cd libs/lua-5.1.5/src
        # extra utility functions
        wget https://raw.githubusercontent.com/lunarmodules/lua-compat-5.3/refs/heads/master/c-api/compat-5.3.h
        wget https://raw.githubusercontent.com/lunarmodules/lua-compat-5.3/refs/heads/master/c-api/compat-5.3.c
        cd -
        dos2unix libs/love/CMakeLists.txt  # patch does *not* like different line endings
        patch -p1 -li ../extra/web/lua_intsize_fix.patch  # fix love.data errors due to internal 32 bit integer usage
        patch -p1 -li ../extra/web/include_fake_dlfcn.patch  # make final love binary include fake dynamic (actually static) libraries
        cd ..

    - name: Build cffi-lua
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/q66/cffi-lua
        cd cffi-lua
        mkdir build
        cd build
        # lua.hpp is expected at cffi-lua/<deps_dir>/include/lua.hpp, in later meson versions this'd be cffi-lua/build/<deps_dir>/include/lua.hpp
        meson setup --cross-file ../../extra/web/wasm.txt -Ddeps_dir=../extra/web -Dlua_version=vendor -Dstatic=true --buildtype release ..
        ninja all
        mv libcffi-lua-5.1.a subprojects/libffi/src/libffi.a ../../megasource-web
        cd ../..

    - name: Build sqlite3
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: |
        wget https://sqlite.org/2025/sqlite-amalgamation-3500300.zip
        7z x sqlite-amalgamation-3500300.zip
        cd sqlite-amalgamation-3500300
        emcc sqlite3.c -c -pthread -O3 -o ../megasource-web/sqlite3.o
        cd ..

    - name: Build fake dlfcn
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: |
        cd megasource-web
        ../extra/web/build_fake_dlfcn.sh
        cd ..

    - name: Build megasource
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: |
        cd megasource-web
        mkdir build
        cd build
        emcmake cmake -DLOVE_JIT=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS="-pthread" -DCMAKE_CXX_FLAGS="-pthread" -DCMAKE_POLICY_VERSION_MINIMUM=3.5 ..
        emmake make
        cd ../..

    - name: Setup Web Builder
      run: |
        git clone https://github.com/rozenmad/love-web-builder
        cp extra/web/template.html extra/web/love.css love-web-builder/lovejs_source
        cp extra/web/love.css extra/web/love.css love-web-builder/lovejs_source/theme
        cp megasource-web/build/love/love.js megasource-web/build/love/love.wasm love-web-builder/lovejs_source/compat

    - name: Create Website
      run: |
        mkdir oh-ce-source
        cp -r *.lua assets compat extlibs game game_handler server ui input_schemes oh-ce-source
        cd love-web-builder
        mkdir contents
        python build.py -n "Open Hexagon CE" ../oh-ce-source contents/oh-ce-wasm

    - name: Upload artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: oh-ce-wasm
        path: love-web-builder/contents
