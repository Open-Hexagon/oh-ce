name: Build and package for osx

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  LOVE_ARTIFACT_URL: "https://api.github.com/repos/love2d/love/actions/artifacts/4160414242/zip"

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4.1.1

    - name: Build sqlite3
      run: |
        wget https://www.sqlite.org/2023/sqlite-amalgamation-3430100.zip
        7z x sqlite-amalgamation-3430100.zip
        mkdir lib
        clang -shared -fPIC sqlite-amalgamation-3430100/sqlite3.c -o lib/libsqlite3.dylib

    - name: Create App bundle
      run: |
        # get love osx binary
        curl -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --output love12.zip --url "${{ env.LOVE_ARTIFACT_URL }}"
        7z x love12.zip
        7z x love-macos.zip
        mv love.app oh-ce.app
        # copy files into bundle (.love folder ending to fool love into thinking there is a zip bundle to start)
        mkdir oh-ce.app/Contents/Resources/oh-ce.love
        cp -r *.lua lib assets audio compat extlibs game game_handler server ui input_schemes oh-ce.app/Contents/Resources/oh-ce.love
        # insert the right metadata
        patch oh-ce.app/Contents/Info.plist extra/osx/app-data.patch
        # work around https://github.com/actions/upload-artifact/issues/38 (executable permission not preserved) by uploading a zipped tarball
        tar -cf oh-ce.app.tar oh-ce.app

    - name: Upload artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: oh-ce.app.tar
        path: oh-ce.app.tar
